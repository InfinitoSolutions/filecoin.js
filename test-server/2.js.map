{"version":3,"sources":["webpack://FilecoinJs/./node_modules/@zondax/filecoin-signing-tools/browser/filecoin_signer_wasm.js","webpack://FilecoinJs/./node_modules/@zondax/filecoin-signing-tools/browser/filecoin_signer_wasm_bg.js","webpack://FilecoinJs/(webpack)/buildin/harmony-module.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","__wbg_adapter_26","arg0","arg1","arg2","getVersion","transport_wrapper","keyRetrieveFromDevice","path","ptr0","len0","showKeyOnDevice","transactionSignRawWithDevice","message","passArray8ToWasm0","ptr1","len1","transactionSignWithDevice","unsigned_tx_js","appInfo","deviceInfo","getArrayU8FromWasm0","generateMnemonic","r0","r1","keyDerive","mnemonic","password","ptr2","len2","ExtendedKey","__wrap","keyDeriveFromSeed","seed","keyRecover","private_key_js","testnet","transactionSerialize","transactionSerializeRaw","unsigned_message","v0","transactionParse","cbor_js","transactionSign","transactionSignLotus","transactionSignRaw","verifySignature","signature_js","message_js","cachegetUint32Memory0","passArrayJsValueToWasm0","array","Uint32Array","i","createMultisig","sender_address","addresses","value","required","nonce","proposeMultisig","multisig_address","to_address","from_address","amount","ptr3","len3","approveMultisig","message_id","proposer_address","ptr4","len4","cancelMultisig","serializeParams","params_value","handleError","f","apply","this","arguments","e","Object","create","prototype","__wbindgen_string_new","__wbindgen_object_drop_ref","__wbg_from_97df795a364445c8","Buffer","__wbg_exchange_6c195caeaf4d0a08","exchange","__wbindgen_json_parse","JSON","parse","__wbindgen_json_serialize","stringify","__wbindgen_is_object","val","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_cb_drop","original","cnt","a","__wbg_new_d333a6e567133fdb","__wbg_call_122c1a957507a0d7","call","__wbg_new_17a08b876c4dedc9","__wbg_new_3f7019af886f0c9c","state0","b","Promise","arg3","__wbg_adapter_73","__wbg_reject_b23c1ebe8eda5570","reject","__wbg_resolve_57cbe6ab0b3b60a7","resolve","__wbg_then_45c887a50a229274","then","__wbg_then_9d18941da21f7104","__wbindgen_is_undefined","__wbg_buffer_44855aefa83ea48c","__wbg_new_04793d2c09ba060f","__wbg_set_fdaef5653b2c1408","__wbg_length_3acae3a5337e0257","__wbg_get_38f68ddea9e54820","Reflect","get","__wbg_has_de5b24b960cc5e8e","has","__wbg_set_ede434d91072bd5f","__wbg_getRandomValues_f5e14ab7ac8e995d","getRandomValues","__wbg_randomFillSync_d5bd2d655fdf256a","randomFillSync","__wbg_self_1b7a39e3a92c949c","self","__wbg_require_604837428532a733","__wbg_crypto_968f1772287e2df0","crypto","__wbg_getRandomValues_a3d34b4fee3c2869","__wbindgen_string_get","x","__wbindgen_debug_string","debugString","type","description","name","isArray","debug","builtInMatches","exec","toString","className","_","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","__wbindgen_closure_wrapper601","dtor","state","real","args","makeMutClosure","exports","originalModule","webpackPolyfill","children","defineProperty","enumerable","l"],"mappings":"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","file":"2.js","sourcesContent":["import * as wasm from \"./filecoin_signer_wasm_bg.wasm\";\nexport * from \"./filecoin_signer_wasm_bg.js\";","import * as wasm from './filecoin_signer_wasm_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1 };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) wasm.__wbindgen_export_2.get(dtor)(a, state.b);\n            else state.a = a;\n        }\n    };\n    real.original = state;\n    return real;\n}\nfunction __wbg_adapter_26(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__ha3baf191c8669263(arg0, arg1, addHeapObject(arg2));\n}\n\n/**\n* @param {any} transport_wrapper\n* @returns {any}\n*/\nexport function getVersion(transport_wrapper) {\n    var ret = wasm.getVersion(addHeapObject(transport_wrapper));\n    return takeObject(ret);\n}\n\n/**\n* @param {string} path\n* @param {any} transport_wrapper\n* @returns {any}\n*/\nexport function keyRetrieveFromDevice(path, transport_wrapper) {\n    var ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.keyRetrieveFromDevice(ptr0, len0, addHeapObject(transport_wrapper));\n    return takeObject(ret);\n}\n\n/**\n* @param {string} path\n* @param {any} transport_wrapper\n* @returns {any}\n*/\nexport function showKeyOnDevice(path, transport_wrapper) {\n    var ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.showKeyOnDevice(ptr0, len0, addHeapObject(transport_wrapper));\n    return takeObject(ret);\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} message\n* @param {string} path\n* @param {any} transport_wrapper\n* @returns {any}\n*/\nexport function transactionSignRawWithDevice(message, path, transport_wrapper) {\n    var ptr0 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.transactionSignRawWithDevice(ptr0, len0, ptr1, len1, addHeapObject(transport_wrapper));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} unsigned_tx_js\n* @param {string} path\n* @param {any} transport_wrapper\n* @returns {any}\n*/\nexport function transactionSignWithDevice(unsigned_tx_js, path, transport_wrapper) {\n    var ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.transactionSignWithDevice(addHeapObject(unsigned_tx_js), ptr0, len0, addHeapObject(transport_wrapper));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} transport_wrapper\n* @returns {any}\n*/\nexport function appInfo(transport_wrapper) {\n    var ret = wasm.appInfo(addHeapObject(transport_wrapper));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} transport_wrapper\n* @returns {any}\n*/\nexport function deviceInfo(transport_wrapper) {\n    var ret = wasm.deviceInfo(addHeapObject(transport_wrapper));\n    return takeObject(ret);\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @returns {string}\n*/\nexport function generateMnemonic() {\n    try {\n        wasm.generateMnemonic(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} mnemonic\n* @param {string} path\n* @param {string} password\n* @returns {ExtendedKey}\n*/\nexport function keyDerive(mnemonic, path, password) {\n    var ptr0 = passStringToWasm0(mnemonic, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.keyDerive(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ExtendedKey.__wrap(ret);\n}\n\n/**\n* @param {any} seed\n* @param {string} path\n* @returns {ExtendedKey}\n*/\nexport function keyDeriveFromSeed(seed, path) {\n    var ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.keyDeriveFromSeed(addHeapObject(seed), ptr0, len0);\n    return ExtendedKey.__wrap(ret);\n}\n\n/**\n* @param {any} private_key_js\n* @param {boolean} testnet\n* @returns {ExtendedKey}\n*/\nexport function keyRecover(private_key_js, testnet) {\n    var ret = wasm.keyRecover(addHeapObject(private_key_js), testnet);\n    return ExtendedKey.__wrap(ret);\n}\n\n/**\n* @param {any} message\n* @returns {string}\n*/\nexport function transactionSerialize(message) {\n    try {\n        wasm.transactionSerialize(8, addHeapObject(message));\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {any} unsigned_message\n* @returns {Uint8Array}\n*/\nexport function transactionSerializeRaw(unsigned_message) {\n    wasm.transactionSerializeRaw(8, addHeapObject(unsigned_message));\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v0 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v0;\n}\n\n/**\n* @param {any} cbor_js\n* @param {boolean} testnet\n* @returns {any}\n*/\nexport function transactionParse(cbor_js, testnet) {\n    var ret = wasm.transactionParse(addHeapObject(cbor_js), testnet);\n    return takeObject(ret);\n}\n\n/**\n* @param {any} unsigned_tx_js\n* @param {any} private_key_js\n* @returns {any}\n*/\nexport function transactionSign(unsigned_tx_js, private_key_js) {\n    var ret = wasm.transactionSign(addHeapObject(unsigned_tx_js), addHeapObject(private_key_js));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} unsigned_tx_js\n* @param {any} private_key_js\n* @returns {string}\n*/\nexport function transactionSignLotus(unsigned_tx_js, private_key_js) {\n    try {\n        wasm.transactionSignLotus(8, addHeapObject(unsigned_tx_js), addHeapObject(private_key_js));\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {any} unsigned_tx_js\n* @param {any} private_key_js\n* @returns {any}\n*/\nexport function transactionSignRaw(unsigned_tx_js, private_key_js) {\n    var ret = wasm.transactionSignRaw(addHeapObject(unsigned_tx_js), addHeapObject(private_key_js));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} signature_js\n* @param {any} message_js\n* @returns {boolean}\n*/\nexport function verifySignature(signature_js, message_js) {\n    var ret = wasm.verifySignature(addHeapObject(signature_js), addHeapObject(message_js));\n    return ret !== 0;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4);\n    const mem = getUint32Memory0();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n/**\n* @param {string} sender_address\n* @param {any[]} addresses\n* @param {string} value\n* @param {number} required\n* @param {number} nonce\n* @returns {any}\n*/\nexport function createMultisig(sender_address, addresses, value, required, nonce) {\n    var ptr0 = passStringToWasm0(sender_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArrayJsValueToWasm0(addresses, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.createMultisig(ptr0, len0, ptr1, len1, ptr2, len2, required, nonce);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} multisig_address\n* @param {string} to_address\n* @param {string} from_address\n* @param {string} amount\n* @param {number} nonce\n* @returns {any}\n*/\nexport function proposeMultisig(multisig_address, to_address, from_address, amount, nonce) {\n    var ptr0 = passStringToWasm0(multisig_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(to_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(from_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(amount, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.proposeMultisig(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, nonce);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} multisig_address\n* @param {number} message_id\n* @param {string} proposer_address\n* @param {string} to_address\n* @param {string} amount\n* @param {string} from_address\n* @param {number} nonce\n* @returns {any}\n*/\nexport function approveMultisig(multisig_address, message_id, proposer_address, to_address, amount, from_address, nonce) {\n    var ptr0 = passStringToWasm0(multisig_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(proposer_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(amount, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.approveMultisig(ptr0, len0, message_id, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, nonce);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} multisig_address\n* @param {number} message_id\n* @param {string} proposer_address\n* @param {string} to_address\n* @param {string} amount\n* @param {string} from_address\n* @param {number} nonce\n* @returns {any}\n*/\nexport function cancelMultisig(multisig_address, message_id, proposer_address, to_address, amount, from_address, nonce) {\n    var ptr0 = passStringToWasm0(multisig_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(proposer_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(amount, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from_address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.cancelMultisig(ptr0, len0, message_id, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, nonce);\n    return takeObject(ret);\n}\n\n/**\n* @param {any} params_value\n* @returns {Uint8Array}\n*/\nexport function serializeParams(params_value) {\n    wasm.serializeParams(8, addHeapObject(params_value));\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v0 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v0;\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\nfunction __wbg_adapter_73(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h856db158610e3efc(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n*/\nexport class ExtendedKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ExtendedKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_extendedkey_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    get public_raw() {\n        wasm.extendedkey_public_raw(8, this.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        var v0 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v0;\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    get private_raw() {\n        wasm.extendedkey_private_raw(8, this.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        var v0 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v0;\n    }\n    /**\n    * @returns {string}\n    */\n    get public_hexstring() {\n        try {\n            wasm.extendedkey_public_hexstring(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    get private_hexstring() {\n        try {\n            wasm.extendedkey_private_hexstring(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    get public_base64() {\n        try {\n            wasm.extendedkey_public_base64(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    get private_base64() {\n        try {\n            wasm.extendedkey_private_base64(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    get address() {\n        try {\n            wasm.extendedkey_address(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_from_97df795a364445c8 = function(arg0, arg1) {\n    var ret = new Buffer(getArrayU8FromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_exchange_6c195caeaf4d0a08 = function(arg0, arg1) {\n    var ret = getObject(arg0).exchange(takeObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_is_object = function(arg0) {\n    const val = getObject(arg0);\n    var ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_cb_drop = function(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    var ret = false;\n    return ret;\n};\n\nexport const __wbg_new_d333a6e567133fdb = function(arg0, arg1) {\n    var ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_call_122c1a957507a0d7 = handleError(function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n});\n\nexport const __wbg_new_17a08b876c4dedc9 = function() {\n    var ret = new Object();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_3f7019af886f0c9c = function(arg0, arg1) {\n    try {\n        var state0 = {a: arg0, b: arg1};\n        var cb0 = (arg0, arg1) => {\n            const a = state0.a;\n            state0.a = 0;\n            try {\n                return __wbg_adapter_73(a, state0.b, arg0, arg1);\n            } finally {\n                state0.a = a;\n            }\n        };\n        var ret = new Promise(cb0);\n        return addHeapObject(ret);\n    } finally {\n        state0.a = state0.b = 0;\n    }\n};\n\nexport const __wbg_reject_b23c1ebe8eda5570 = function(arg0) {\n    var ret = Promise.reject(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_resolve_57cbe6ab0b3b60a7 = function(arg0) {\n    var ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_then_45c887a50a229274 = function(arg0, arg1) {\n    var ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_then_9d18941da21f7104 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbg_buffer_44855aefa83ea48c = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_04793d2c09ba060f = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_set_fdaef5653b2c1408 = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport const __wbg_length_3acae3a5337e0257 = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport const __wbg_get_38f68ddea9e54820 = handleError(function(arg0, arg1) {\n    var ret = Reflect.get(getObject(arg0), getObject(arg1));\n    return addHeapObject(ret);\n});\n\nexport const __wbg_has_de5b24b960cc5e8e = handleError(function(arg0, arg1) {\n    var ret = Reflect.has(getObject(arg0), getObject(arg1));\n    return ret;\n});\n\nexport const __wbg_set_ede434d91072bd5f = handleError(function(arg0, arg1, arg2) {\n    var ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n    return ret;\n});\n\nexport const __wbg_getRandomValues_f5e14ab7ac8e995d = function(arg0, arg1, arg2) {\n    getObject(arg0).getRandomValues(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_randomFillSync_d5bd2d655fdf256a = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_self_1b7a39e3a92c949c = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbg_require_604837428532a733 = function(arg0, arg1) {\n    var ret = require(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_crypto_968f1772287e2df0 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_getRandomValues_a3d34b4fee3c2869 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_debug_string = function(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_closure_wrapper601 = function(arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 159, __wbg_adapter_26);\n    return addHeapObject(ret);\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}